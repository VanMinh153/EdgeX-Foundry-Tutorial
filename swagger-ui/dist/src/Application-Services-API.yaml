openapi: 3.0.0
info:
  title: EdgeX Foundry - Application Services API
  description: This is the definition of the API for Application Functions services in the EdgeX Foundry IOT microservice platform. Application Services provides the means for processing/transforming/exporting data out of EdgeX.
  version: Application-Services-API
servers:
- url: http://127.0.0.1:59700/api/v2
  description: URL for local development and testing
paths:
  /config:
    get:
      summary: Returns the current configuration of the service.
      responses:
        "200":
          description: OK
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigResponse"
        "500":
          description: Interval Server Error
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /metrics:
    get:
      summary: An endpoint that can be used to obtain CPU/Memory usage stats for a given service.
      responses:
        "200":
          description: OK
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricsResponse"
        "500":
          description: Interval Server Error
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /ping:
    get:
      summary: A simple 'ping' endpoint that can be used as a service healthcheck
      responses:
        "200":
          description: OK
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PingResponse"
        "500":
          description: Interval Server Error
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /secret:
    post:
      summary: Stores a secret to the service's Secret Store
      parameters:
      - name: X-Correlation-ID
        in: header
        description: "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request."
        required: true
        schema:
          type: string
          format: uuid
        example: 14a42ea6-c394-41c3-8bcd-a29b9f5e6835
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/secret_body"
        required: true
      responses:
        "201":
          description: Created
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "400":
          description: Invalid request.
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: An unexpected error happened on the server.
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /trigger:
    post:
      summary: Trigger function pipeline from HTTP request.
      description: Available when 'http' is specified as the Trigger type in configuration. Provides a way to initiate and start processing the defined pipeline using the data submitted.
      parameters:
      - name: X-Correlation-ID
        in: header
        description: "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request."
        required: true
        schema:
          type: string
          format: uuid
        example: 14a42ea6-c394-41c3-8bcd-a29b9f5e6835
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Object type must match the Application Service's Target Type. Currently Target Type defaults to EdgeX model.Events from go-mod-core-contracts. This will change to default to a V2 dtos.Event in the future.
        required: true
      responses:
        "200":
          description: OK
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                type: object
                description: "Optional reponse is the output data from the Application Service's function pipeline, if set."
        "400":
          description: Bad Request
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/text:
              schema:
                type: string
                description: message describing the error encountered
        "422":
          description: Unprocessable Entity
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/text:
              schema:
                type: string
                description: message describing the error encountered
        "500":
          description: Interval Server Error
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/text:
              schema:
                type: string
                description: message describing the error encountered
  /version:
    get:
      summary: "A simple 'version' endpoint that will return the current version of the service, as well as the SDK version"
      responses:
        "200":
          description: OK
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VersionSdkResponse"
        "500":
          description: Interval Server Error
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    BaseRequest:
      type: object
      properties:
        requestId:
          type: string
          description: Uniquely identifies this request. Only used for async protocols that need match the response to the request.
          format: uuid
          example: e6e8a2f4-eb14-4649-9e2b-175247911369
        apiVersion:
          type: string
          description: A version number shows the API version in DTOs.
          example: v2
      description: Defines basic properties which all use-case specific request DTO instances should support.
    BaseResponse:
      type: object
      properties:
        apiVersion:
          type: string
          description: A version number shows the API version in DTOs.
        requestId:
          type: string
          description: Uniquely identifies the request that resulted in this response.
          format: uuid
          example: e6e8a2f4-eb14-4649-9e2b-175247911369
        statusCode:
          type: integer
          description: A numeric code signifying the operational status of the response.
        message:
          type: string
          description: "A field that can contain a free-form message, such as an error message."
      description: Defines basic properties which all use-case specific response DTO instances should support
    ErrorResponse:
      type: object
      description: A response type for returning a generic error to the caller.
      allOf:
      - $ref: "#/components/schemas/BaseResponse"
    ConfigResponse:
      type: object
      properties:
        apiVersion:
          type: string
          description: A version number shows the API version in DTOs.
        config:
          type: object
          description: "An object containing the service's configuration. Please refer to Core Data's configuration documentation for more details at [EdgeX Foundry Documentation](https://docs.edgexfoundry.org)."
        serviceName:
          type: string
          description: Outputs the name of the service the response is from
      description: Provides a response containing the configuration for the targeted service.
    MetricsResponse:
      type: object
      properties:
        apiVersion:
          type: string
          description: A version number shows the API version in DTOs.
        serviceName:
          type: string
          description: Outputs the name of the service the response is from
        metrics:
          $ref: "#/components/schemas/MetricsResponse_metrics"
      description: A response from the /metrics endpoint providing memory and cpu utilization stats.
    PingResponse:
      type: object
      properties:
        apiVersion:
          type: string
          description: A version number shows the API version in DTOs.
        timestamp:
          type: string
          description: Outputs the current server timestamp in Unix Time format
        serviceName:
          type: string
          description: Outputs the name of the service the response is from
      description: A response from the /ping endpoint indicating that the service is functioning.
    SecretRequest:
      required:
      - path
      - secrets
      type: object
      properties:
        path:
          type: string
          description: Specifies the type or location of the secret to store
          example: credentials
        secretData:
          type: array
          description: A list of the key/value pairs of secret data to store
          items:
            $ref: "#/components/schemas/SecretDataKeyValue"
      description: Defines the secret data to be stored
      allOf:
      - $ref: "#/components/schemas/BaseRequest"
    SecretDataKeyValue:
      required:
      - key
      - value
      type: object
      properties:
        key:
          type: string
          description: The key to identify the secret data
          example: username
        value:
          type: string
          description: The value of the secret data
          example: mqtt-user
      description: Defines a key/value pair of secret data
    VersionResponse:
      type: object
      properties:
        apiVersion:
          type: string
          description: A version number shows the API version in DTOs.
        version:
          type: string
          description: The latest version supported by the service.
        serviceName:
          type: string
          description: Outputs the name of the service the response is from
      description: A response returned from the /version endpoint whose purpose is to report out the latest version supported by the service.
    VersionSdkResponse:
      type: object
      properties:
        sdk_version:
          type: string
          description: The version of the SDK with which the service was built.
      description: "A response returned from the /version endpoint whose purpose is to report out the latest version supported by the service, as well as the latest SDK version supported."
      allOf:
      - $ref: "#/components/schemas/VersionResponse"
    secret_body:
      allOf:
      - $ref: "#/components/schemas/SecretRequest"
    MetricsResponse_metrics:
      type: object
      properties:
        memAlloc:
          type: integer
          description: Alloc is bytes of allocated heap objects which is a uint64 type integer.
        memFrees:
          type: integer
          description: Frees is the cumulative count of heap objects freed which is a uint64 type integer.
        memLiveObjects:
          type: integer
          description: The uint64 type integer of live objects is Mallocs - Frees.
        memMallocs:
          type: integer
          description: The cumulative count of heap objects allocated which is a uint64 type integer.
        memSys:
          type: integer
          description: The total bytes of memory obtained from the OS which is a uint64 type integer.
        memTotalAlloc:
          type: integer
          description: Cumulative bytes allocated for heap objects which is a uint64 type integer.
        cpuBusyAvg:
          type: number
          description: A uint8 type integer indicates the average level of CPU utilization
  parameters:
    correlatedRequestHeader:
      name: X-Correlation-ID
      in: header
      description: "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request."
      required: true
      schema:
        type: string
        format: uuid
      example: 14a42ea6-c394-41c3-8bcd-a29b9f5e6835
  headers:
    correlatedResponseHeader:
      description: A response header that returns the unique correlation ID used to initiate the request.
      required: true
      schema:
        type: string
        format: uuid
      example: 14a42ea6-c394-41c3-8bcd-a29b9f5e6835
