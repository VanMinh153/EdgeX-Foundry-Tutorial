openapi: 3.0.0
info:
  title: EdgeX Foundry - Device Service API
  description: "This is the definition of the API for Device services in the EdgeX Foundry IOT microservice platform. Device Services are responsible for obtaining Readings from target devices, and for writing values (settings) to them."
  version: Device-Service-API
servers:
- url: http://127.0.0.1:59900/api/v2
  description: ""
paths:
  /callback/device:
    put:
      description: This call is used by core-metadata to inform the device service that a Device's characteristics have been updated
      parameters:
      - name: X-Correlation-ID
        in: header
        description: "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request."
        required: true
        schema:
          type: string
          format: uuid
        example: 14a42ea6-c394-41c3-8bcd-a29b9f5e6835
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDeviceRequest"
        required: true
      responses:
        "200":
          description: Callback successful
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "400":
          description: Invalid callback request.
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: The device doesn't exist.
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error.
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      description: This call is used by core-metadata to inform the device service of the creation of a new Device
      parameters:
      - name: X-Correlation-ID
        in: header
        description: "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request."
        required: true
        schema:
          type: string
          format: uuid
        example: 14a42ea6-c394-41c3-8bcd-a29b9f5e6835
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewDeviceRequest"
        required: true
      responses:
        "200":
          description: Callback successful
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "400":
          description: Invalid callback request.
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error.
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /callback/device/name/{name}:
    delete:
      description: This call is used by core-metadata to inform the device service that a Device has been deleted
      parameters:
      - name: X-Correlation-ID
        in: header
        description: "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request."
        required: true
        schema:
          type: string
          format: uuid
        example: 14a42ea6-c394-41c3-8bcd-a29b9f5e6835
      - name: name
        in: path
        description: The unique name of a device
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Callback successful
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "404":
          description: No device exists for the ID provided.
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error.
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /callback/profile:
    put:
      description: This call is used by core-metadata to inform the device service that a Device Profile has been updated
      parameters:
      - name: X-Correlation-ID
        in: header
        description: "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request."
        required: true
        schema:
          type: string
          format: uuid
        example: 14a42ea6-c394-41c3-8bcd-a29b9f5e6835
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProfileRequest"
        required: true
      responses:
        "200":
          description: Callback successful
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "400":
          description: Invalid callback request.
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: The device profile doesn't exist.
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error.
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /callback/watcher:
    put:
      description: This call is used by core-metadata to inform the device service that a Provision Watcher's characteristics have been updated
      parameters:
      - name: X-Correlation-ID
        in: header
        description: "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request."
        required: true
        schema:
          type: string
          format: uuid
        example: 14a42ea6-c394-41c3-8bcd-a29b9f5e6835
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProvisionWatcherRequest"
        required: true
      responses:
        "200":
          description: Callback successful
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "400":
          description: Invalid callback request.
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: The provision watcher doesn't exist.
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error.
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      description: This call is used by core-metadata to inform the device service of the creation of a new Provision Watcher
      parameters:
      - name: X-Correlation-ID
        in: header
        description: "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request."
        required: true
        schema:
          type: string
          format: uuid
        example: 14a42ea6-c394-41c3-8bcd-a29b9f5e6835
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewProvisionWatcherRequest"
        required: true
      responses:
        "200":
          description: Callback successful
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "400":
          description: Invalid callback request.
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error.
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /callback/service:
    put:
      description: This call is used by core-metadata to inform the device service that its characteristics have been updated
      parameters:
      - name: X-Correlation-ID
        in: header
        description: "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request."
        required: true
        schema:
          type: string
          format: uuid
        example: 14a42ea6-c394-41c3-8bcd-a29b9f5e6835
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDeviceServiceRequest"
        required: true
      responses:
        "200":
          description: Callback successful
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "400":
          description: Invalid callback request.
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: The device doesn't exist.
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error.
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /callback/watcher/name/{name}:
    delete:
      description: This call is used by core-metadata to inform the device service that a Provision Watcher has been deleted
      parameters:
      - name: X-Correlation-ID
        in: header
        description: "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request."
        required: true
        schema:
          type: string
          format: uuid
        example: 14a42ea6-c394-41c3-8bcd-a29b9f5e6835
      - name: name
        in: path
        description: The unique name of a provision watcher
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Callback successful
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "404":
          description: No provision watcher exists for the ID provided.
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error.
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /device/name/{name}/{command}:
    get:
      description: Request the device/sensor by its name to return the current (or in some cases new) event/reading values for the command or device resource specified. The device service may have cached the latest event/reading for the sensor(s) or it may immediate request new event/reading values depending on the implementation and the device(s)/sensor(s) capability.
      parameters:
      - name: X-Correlation-ID
        in: header
        description: "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request."
        required: true
        schema:
          type: string
          format: uuid
        example: 14a42ea6-c394-41c3-8bcd-a29b9f5e6835
      - name: name
        in: path
        description: A name uniquely identifying a device.
        required: true
        schema:
          type: string
        example: sensor01
      - name: command
        in: path
        description: A name uniquely identifying a command.
        required: true
        schema:
          type: string
        example: command01
      - name: ds-pushevent
        in: query
        description: "If set to yes, a successful GET will result in an event being pushed to the EdgeX system"
        required: false
        schema:
          type: string
          default: "false"
          enum:
          - "true"
          - "false"
        example: true
      - name: ds-returnevent
        in: query
        description: "If set to no, there will be no Event returned in the http response"
        required: false
        schema:
          type: string
          default: "true"
          enum:
          - "true"
          - "false"
        example: false
      responses:
        "200":
          description: String as returned by the device/sensor through the device service.
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventResponse"
        "404":
          description: If no device exists by the name provided or the command is unknown.
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "405":
          description: "If the requested command exists but not for GET, or the resource is marked as write-only."
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "423":
          description: If the device or service is locked (admin state) or disabled (operating state).
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "The device driver is unable to process the request, or too many values were returned."
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      description: Request the actuator by its name to trigger a action or set a current value for the command or device resource specified.
      parameters:
      - name: X-Correlation-ID
        in: header
        description: "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request."
        required: true
        schema:
          type: string
          format: uuid
        example: 14a42ea6-c394-41c3-8bcd-a29b9f5e6835
      - name: name
        in: path
        required: true
        schema:
          type: string
        example: sensor
      - name: command
        in: path
        required: true
        schema:
          type: string
        example: allValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SettingRequest"
        required: true
      responses:
        "200":
          description: The PUT command was successful.
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "404":
          description: If no device exists for the name provided or the command is unknown.
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "405":
          description: "If the requested command exists but not for PUT, or the resource is marked as read-only."
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "423":
          description: If the device or service is locked (admin state) or disabled (operating state).
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: The device driver is unable to process the request.
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /secret:
    post:
      summary: Stores a secret to the secure Secret Store
      parameters:
      - name: X-Correlation-ID
        in: header
        description: "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request."
        required: true
        schema:
          type: string
          format: uuid
        example: 14a42ea6-c394-41c3-8bcd-a29b9f5e6835
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/secret_body"
        required: true
      responses:
        "201":
          description: Created
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "400":
          description: Invalid request.
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: An unexpected error happened on the server.
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /validate/device:
    post:
      summary: Run the device-specific validation for a Device's Properties.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewDeviceRequest"
        required: true
      responses:
        "200":
          description: Validation succeed or validator implicitly not implemented
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "400":
          description: Invalid validation request.
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Validation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /discovery:
    post:
      description: Run the discovery request for a Device Service. No request body is required.
      responses:
        "202":
          description: The service is running the discovery request.
        "423":
          description: The service is disabled or administratively locked.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: An unexpected error occurred on the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "501":
          description: The device driver does not implement discovery.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "503":
          description: Discovery is disabled by configuration.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /config:
    get:
      summary: Returns the current configuration of the service.
      responses:
        "200":
          description: OK
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigResponse"
        "500":
          description: Interval Server Error
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /metrics:
    get:
      summary: An endpoint that can be used to obtain CPU/Memory usage stats for a given service.
      responses:
        "200":
          description: OK
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricsResponse"
        "500":
          description: Interval Server Error
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /ping:
    get:
      summary: A simple 'ping' endpoint that can be used as a service healthcheck
      responses:
        "200":
          description: OK
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PingResponse"
        "500":
          description: Interval Server Error
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /version:
    get:
      summary: A simple 'version' endpoint that will return the current version of the service
      responses:
        "200":
          description: OK
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VersionResponse"
        "500":
          description: Interval Server Error
          headers:
            X-Correlation-ID:
              $ref: "#/components/headers/correlatedResponseHeader"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    AutoEvent:
      required:
      - frequency
      - sourceName
      type: object
      properties:
        interval:
          type: string
          description: "Specifies a time interval between reading requests. This may be in a combination of hours, minutes, seconds and milliseconds (h/m/s/ms)"
          example: 1m30s
        onChange:
          type: boolean
          description: "If true, new Events will only be generated if successive readings differ in value."
        sourceName:
          type: string
          description: SourceName indicates the name of the resource or device command in the device profile which describes the event to generate
      description: Identifies a resource which will be read automatically by the device service.
    NewBaseReading:
      type: object
      properties:
        device:
          type: string
          description: The name of the device from which the reading originated
        origin:
          type: integer
          description: A Unix timestamp indicating when the reading was originated at the source device (can support nanoseconds)
      description: A base reading type containing common properties from which more specific reading types inherit. This definition should not be implemented but is used elsewhere to indicate support for a mixed list of simple/binary readings in a single event.
    BaseRequest:
      type: object
      properties:
        requestId:
          type: string
          description: "Uniquely identifies this request. For implementation, recommend this value be generated by the type's constructor."
          format: uuid
          example: e6e8a2f4-eb14-4649-9e2b-175247911369
        apiVersion:
          type: string
          description: A version number shows the API version in DTOs.
          example: v2
      description: Defines basic properties which all use-case specific request DTO instances should support.
    NewBinaryReading:
      description: An event reading for a binary data type
      allOf:
      - $ref: "#/components/schemas/NewBaseReading"
      - type: object
        properties:
          binaryValue:
            type: string
            description: The value of the reading will be found in this property as a byte array
            format: binary
          mediaType:
            type: string
            description: "E.g. MIME Type, indicates what the content type of the binaryValue property is."
    BaseResponse:
      type: object
      properties:
        apiVersion:
          type: string
          description: A version number shows the API version in DTOs.
          example: v2
        requestId:
          type: string
          description: Uniquely identifies the request that resulted in this response.
          format: uuid
          example: e6e8a2f4-eb14-4649-9e2b-175247911369
        statusCode:
          type: integer
          description: A numeric code signifying the operational status of the response.
        message:
          type: string
          description: "A field that can contain a free-form message, such as an error message."
      description: Defines basic properties which all use-case specific response DTO instances should support
    Device:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the device
          format: uuid
        created:
          type: integer
          description: A Unix timestamp indicating when the object was initially persisted to a database
        modified:
          type: integer
          description: A Unix timestamp indicating when the object was last modified
        name:
          type: string
          description: The name of the device
        description:
          type: string
          description: A free-format descriptive field for additional device information
        adminState:
          type: string
          description: "Administrative state of the device, allowing it to be locked for policy reasons"
          enum:
          - LOCKED
          - UNLOCKED
        operatingState:
          type: string
          description: "Operating state of the device, indicating whether it is currently responsive"
          enum:
          - UP
          - DOWN
          - UNKNOWN
        lastConnected:
          type: integer
          description: Time (milliseconds) that the device last provided any feedback or responded to any request
        lastReported:
          type: integer
          description: Time (milliseconds) that the device reported data to the core microservice
        labels:
          type: array
          description: Other labels applied to the device to help with searching
          items:
            type: string
        location:
          type: object
          description: Device service specific location information
        serviceId:
          type: string
          description: Associated device service referenced by id
        serviceName:
          type: string
          description: Associated device service referenced by name
        profileId:
          type: string
          description: Associated device profile referenced by id
        profileName:
          type: string
          description: Associated device profile referenced by name
        autoEvents:
          type: array
          description: Events which the service should generate automatically from this device.
          items:
            $ref: "#/components/schemas/AutoEvent"
        protocols:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/ProtocolProperties"
      description: A device is an IoT object represented in EdgeX.
    DeviceProfile:
      type: object
      properties:
        id:
          type: string
          description: "ID uniquely identifies the device profile, a UUID for example"
          format: uuid
        name:
          type: string
          description: Non-database identifier (must be unique)
        description:
          type: string
          description: Description.
        created:
          type: integer
          description: Created is a timestamp indicating when the entity was created.
        modified:
          type: integer
          description: Modified is a timestamp indicating when the entity was last modified.
        manufacturer:
          type: string
          description: Manufacturer of the device
        model:
          type: string
          description: Model of the device
        labels:
          type: array
          description: Labels used to search for groups of profiles
          items:
            type: string
        deviceResources:
          type: array
          items:
            $ref: "#/components/schemas/DeviceResource"
        deviceCommands:
          type: array
          items:
            $ref: "#/components/schemas/DeviceCommand"
      description: "A profile defining a class of device to be onboarded, including its capabilities and data format."
    UpdateDeviceService:
      type: object
      properties:
        id:
          type: string
          description: "ID uniquely identifies the device, a UUID for example"
          format: uuid
        name:
          type: string
          description: Non-database identifier(must be unique)
        labels:
          type: array
          description: tags or other labels applied to the device service for search or other identification needs
          items:
            type: string
        baseAddress:
          type: string
          description: "BaseAddress is a fully qualified URI, e.g. <protocol>:\\\\<hostname>:<port>/<optional path>"
        adminState:
          type: string
          description: Device Service Admin State
          enum:
          - LOCKED
          - UNLOCKED
      description: A DeviceService is responsible for proxying connectivity between a set of devices and the EdgeX Foundry core services.
    DeviceResource:
      required:
      - name
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        isHidden:
          type: boolean
          description: Indicate the visibility of the DeviceResource via a CoreCommand.
        tag:
          type: string
        properties:
          $ref: "#/components/schemas/ResourceProperties"
        attributes:
          type: object
          additionalProperties:
            type: string
          description: Each Device Service should define required and optional keys
      description: DeviceResource represents a value on a device that can be read or written.
    BaseReading:
      required:
      - deviceName
      - origin
      - profileName
      - resourceName
      - valueType
      type: object
      properties:
        apiVersion:
          type: string
          description: A version number shows the API version in DTOs.
        id:
          type: string
          description: The unique identifier for the reading
          format: uuid
        created:
          type: integer
          description: A Unix timestamp indicating when (if) the reading was initially persisted to a database.
        origin:
          type: integer
          description: A Unix timestamp indicating when the reading was originated at the source device (can support nanoseconds)
        deviceName:
          type: string
          description: The name of the device from which the reading originated
        resourceName:
          type: string
          description: The device resource name for the reading
        profileName:
          type: string
          description: The device profile name for the reading
        valueType:
          type: string
          description: Indicates the datatype of the value property
      description: A base reading type containing common properties from which more specific reading types inherit. This definition should not be implemented but is used elsewhere to indicate support for a mixed list of simple/binary readings in a single event.
    SimpleReading:
      required:
      - value
      description: An event reading for a simple data type
      allOf:
      - $ref: "#/components/schemas/BaseReading"
      - type: object
        properties:
          value:
            type: string
            description: A string representation of the reading's value
    BinaryReading:
      description: An event reading for a binary data type
      allOf:
      - $ref: "#/components/schemas/BaseReading"
      - required:
        - binaryValue
        - mediaType
        type: object
        properties:
          binaryValue:
            type: string
            description: "If the value of the reading is binary, it will be found in this property as a byte array"
            format: byte
          mediaType:
            type: string
            description: "E.g. MIME Type, indicates what the content type of the binaryValue property is if it's populated."
    Event:
      required:
      - deviceName
      - id
      - origin
      - profileName
      - readings
      properties:
        apiVersion:
          type: string
          description: A version number shows the API version in DTOs.
        id:
          type: string
          description: The unique identifier for the event
          format: uuid
        deviceName:
          type: string
          description: The name of the device from which the event originated
        profileName:
          type: string
          description: The name of the device profile from which the event originated
        created:
          type: integer
          description: A Unix timestamp indicating when (if) the event was initially persisted to a database.
        origin:
          type: integer
          description: A Unix timestamp indicating when the event was originated at the source device (can support nanoseconds)
        readings:
          type: array
          description: One or more readings captured at the time of the event
          items:
            $ref: "#/components/schemas/SimpleReading"
        tags:
          title: tags
          type: object
          description: List of zero or more Tags attached to the Event which give more context to the Event
          example:
            Gateway-id: HoustonStore-000123
            Latitude: "29.630771"
            Longitude: "-95.377603"
      description: A discrete event containing one or more readings
    EventResponse:
      type: object
      properties:
        event:
          $ref: "#/components/schemas/Event"
      description: A response type for returning an Event to the caller.
      allOf:
      - $ref: "#/components/schemas/BaseResponse"
    ErrorResponse:
      type: object
      description: A response type for returning a generic error to the caller.
      allOf:
      - $ref: "#/components/schemas/BaseResponse"
    ConfigResponse:
      type: object
      properties:
        serviceName:
          type: string
          description: Outputs the name of the service the response is from
        config:
          type: object
          description: "An object containing the service''s configuration. Please refer to Core Data''s configuration documentation for more details at [EdgeX Foundry Documentation](https://docs.edgexfoundry.org)."
      description: Provides a response containing the configuration for the targeted service.
      allOf:
      - $ref: "#/components/schemas/BaseResponse"
    MetricsResponse:
      type: object
      properties:
        serviceName:
          type: string
          description: Outputs the name of the service the response is from
        metrics:
          $ref: "#/components/schemas/MetricsResponse_metrics"
      description: A response from the /metrics endpoint providing memory and cpu utilization stats.
      allOf:
      - $ref: "#/components/schemas/BaseResponse"
    NewDeviceRequest:
      required:
      - device
      type: object
      properties:
        device:
          $ref: "#/components/schemas/Device"
      description: Notification that a new device associated with this device service has been created.
      allOf:
      - $ref: "#/components/schemas/BaseRequest"
    NewProfileRequest:
      required:
      - profile
      type: object
      properties:
        profile:
          $ref: "#/components/schemas/DeviceProfile"
      description: Notification that a new device profile has been created.
      allOf:
      - $ref: "#/components/schemas/BaseRequest"
    NewProvisionWatcherRequest:
      required:
      - provisionWatcher
      type: object
      properties:
        provisionWatcher:
          $ref: "#/components/schemas/ProvisionWatcher"
      description: Notification that a new provision watcher associated with this device service has been created.
      allOf:
      - $ref: "#/components/schemas/BaseRequest"
    NewEventResponse:
      properties:
        apiVersion:
          type: string
          description: A version number shows the API version in DTOs.
          example: v2
        device:
          type: string
          description: The name of the device from which the event originated
        origin:
          type: integer
          description: A Unix timestamp indicating when the event was originated at the source device (can support nanoseconds)
        readings:
          type: array
          description: One or more readings captured at the time of the event
          items:
            $ref: "#/components/schemas/NewBaseReading"
      description: A discrete event containing one or more readings
    PingResponse:
      type: object
      properties:
        timestamp:
          type: string
          description: Outputs the current server timestamp in RFC1123 format
          example: "Mon, 02 Jan 2006 15:04:05 MST"
        serviceName:
          type: string
          description: Outputs the name of the service the response is from
      description: A response from the /ping endpoint indicating that the service is functioning.
      allOf:
      - $ref: "#/components/schemas/BaseResponse"
    DeviceCommand:
      required:
      - name
      - readWrite
      - resourceOperations
      type: object
      properties:
        name:
          type: string
        isHidden:
          type: boolean
          description: Indicate the visibility of the DeviceCommand via a CoreCommand.
        readWrite:
          type: string
          description: "Read/Write Permissions set for this DeviceCommand. The value can be R, W, or RW. R enables GET command, and W enables SET command in the Core Command Service."
        resourceOperations:
          type: array
          items:
            $ref: "#/components/schemas/ResourceOperation"
      description: Defines read/write capabilities native to the device
    ResourceProperties:
      required:
      - readWrite
      - valueType
      type: object
      properties:
        valueType:
          type: string
          description: "ValueDescriptor Type of property after transformations. Optional: uint8, uint16, uint32, uint64, int8, int16, int32, int64, float32, float64, bool, string, binary, uint8array, uint16array, uint32array, uint64array, int8array, int16array, int32array, int64array, float32array, float64array, boolarray."
        readWrite:
          type: string
          description: "Read/Write Permissions set for this ResourceProperties. The value can be R, W, or RW. R enables GET command, and W enables SET command in the Core Command Service."
        units:
          type: string
          description: "A string which describes the measurement units associated with a property value  Examples include \"deg/s\", \"degreesFarenheit\", \"G\", or \"% Relative Humidity\""
        minimum:
          type: string
          description: Minimum value that can be get/set from this property
        maximum:
          type: string
          description: Maximum value that can be get/set from this property
        defaultValue:
          type: string
          description: "Default value set to this property if no argument is passed. If present, should be compatible with the Type field"
        mask:
          type: string
          description: Mask to be applied prior to get/set of property. Only valid where Type is one of the integer types.
        shift:
          type: string
          description: "Shift to be applied after masking, prior to get/set of property. Only valid where Type is one of the integer types"
        scale:
          type: string
          description: "Multiplicative factor to be applied after shifting, prior to get/set of property. Only valid where Type is one of the integer or float types"
        offset:
          type: string
          description: "Additive factor to be applied after multiplying, prior to get/set of property. Only valid where Type is one of the integer or float types"
        base:
          type: string
          description: "Base for property to be applied to, leave 0 for no power operation (i.e. base ^ property: 2 ^ 10). Only valid where Type is one of the integer or float types."
        assertion:
          type: string
          description: "Required value of the property, set for checking error state.  Failing an assertion condition will mark the device with an error state"
        mediaType:
          type: string
          description: A string value used to indicate the type of binary data if Type=binary
      description: Defines constraints with regard to the range of acceptable values assigned to an event reading and defined as a property within a device profile.
    ProtocolProperties:
      type: object
      additionalProperties:
        type: string
      description: The properties required to address a device via a particular protocol.
      example:
        Host: floor4.hq.acme.com
        Port: "8080"
    ProvisionWatcher:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the provision watcher
          format: uuid
        name:
          type: string
          description: The name of the provision watcher
        created:
          type: integer
          description: A Unix timestamp indicating when the object was initially persisted to a database
        modified:
          type: integer
          description: A Unix timestamp indicating when the object was last modified
        labels:
          type: array
          description: Labels applied to the provision watcher to help with searching
          items:
            type: string
        identifiers:
          type: object
          additionalProperties:
            type: string
          description: Properties of a new device which must match in order for this provision watcher to match the new device
        blockingIdentifiers:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: Properties of a new device which must not match in order for this provision watcher to match the new device
        serviceName:
          type: string
          description: The device service to which to associate devices which match this watcher
        profileName:
          type: string
          description: The device profile to which to associate devices which match this watcher
        adminState:
          type: string
          description: The initial administrative state to apply to devices which match this watcher
          enum:
          - LOCKED
          - UNLOCKED
        autoEvents:
          type: array
          description: Autoevents that allow device service to automatically start generating data from new devices
          items:
            $ref: "#/components/schemas/AutoEvent"
      description: "A Provision Watcher assigns a subset of discoverable devices to a specified device service, and specifies the device profile which should be used with them, and their initial adminState. The subset is defined by the Identifiers and BlockingIdentifiers, which are matched against a discovered device's protocol properties - the subset contains only devices which match all of the Identifiers and none of the BlockingIdentifiers."
    ResourceOperation:
      required:
      - deviceResource
      type: object
      properties:
        deviceResource:
          type: string
          description: The replacement of Object field. Must name a DeviceResource in this profile
        defaultValue:
          type: string
          description: "If present, should be compatible with the Type field of the named DeviceResource"
        mappings:
          type: object
          additionalProperties:
            type: string
          description: Only valid where the Type of the named DeviceResource is String
      description: Defines an operation of which a device is capable.
    NewSimpleReading:
      description: An event reading for a simple data type
      allOf:
      - $ref: "#/components/schemas/NewBaseReading"
      - type: object
        properties:
          floatEncoding:
            type: string
            description: "Indicates how a float value is encoded, if the value property contains a float."
          valueType:
            type: string
            description: Indicates the datatype of the value property
          value:
            type: string
            description: A string representation of the reading's value
    SecretRequest:
      required:
      - path
      - secretData
      type: object
      properties:
        path:
          type: string
          description: Specifies the location within the secret to store
          example: credentials
        secretData:
          type: array
          description: A list of the key/value pairs of secret data to store
          items:
            $ref: "#/components/schemas/SecretDataKeyValue"
      description: Defines the secret data to be stored
      allOf:
      - $ref: "#/components/schemas/BaseRequest"
    SecretDataKeyValue:
      required:
      - key
      - value
      type: object
      properties:
        key:
          type: string
          description: The key to identify the secret
          example: username
        value:
          type: string
          description: The value of the secret
          example: mqtt-user
      description: Defines a key/value pair of the secret data
    SettingRequest:
      title: Setting
      type: object
      additionalProperties:
        type: string
      description: "Defines new values to be written to device resources, as part of an actuation (put) command to a device"
      example:
        AHU-TargetTemperature: "28.5"
        AHU-TargetBand: "4.0"
    UpdateDeviceRequest:
      required:
      - device
      type: object
      properties:
        device:
          $ref: "#/components/schemas/Device"
      description: Notification that an existing device associated with this device service has been updated.
      allOf:
      - $ref: "#/components/schemas/BaseRequest"
    UpdateProfileRequest:
      required:
      - profile
      type: object
      properties:
        profile:
          $ref: "#/components/schemas/DeviceProfile"
      description: Notification that an existing device profile has been updated.
      allOf:
      - $ref: "#/components/schemas/BaseRequest"
    UpdateProvisionWatcherRequest:
      required:
      - provisionWatcher
      type: object
      properties:
        provisionWatcher:
          $ref: "#/components/schemas/ProvisionWatcher"
      description: Notification that an existing provision watcher associated with this device service has been updated.
      allOf:
      - $ref: "#/components/schemas/BaseRequest"
    UpdateDeviceServiceRequest:
      required:
      - service
      type: object
      properties:
        service:
          $ref: "#/components/schemas/UpdateDeviceService"
      description: A request to update an existing device service definition. 'id' and 'name' must be populated in order to identify the service. Any other property that is populated in the request will be updated. Empty/blank properties will not be considered.
      allOf:
      - $ref: "#/components/schemas/BaseRequest"
    VersionResponse:
      type: object
      properties:
        version:
          type: string
          description: The latest version supported by the service.
        sdk_version:
          type: string
          description: The version of the SDK with which the service was built.
        serviceName:
          type: string
          description: Outputs the name of the service the response is from
      description: A response returned from the /version endpoint whose purpose is to report out the latest version supported by the service.
      allOf:
      - $ref: "#/components/schemas/BaseResponse"
    secret_body:
      allOf:
      - $ref: "#/components/schemas/SecretRequest"
    MetricsResponse_metrics:
      type: object
      properties:
        memAlloc:
          type: integer
          description: Alloc is bytes of allocated heap objects which is a uint64 type integer.
        memFrees:
          type: integer
          description: Frees is the cumulative count of heap objects freed which is a uint64 type integer.
        memLiveObjects:
          type: integer
          description: The uint64 type integer of live objects is Mallocs - Frees.
        memMallocs:
          type: integer
          description: The cumulative count of heap objects allocated which is a uint64 type integer.
        memSys:
          type: integer
          description: The total bytes of memory obtained from the OS which is a uint64 type integer.
        memTotalAlloc:
          type: integer
          description: Cumulative bytes allocated for heap objects which is a uint64 type integer.
        cpuBusyAvg:
          type: number
          description: A uint8 type integer indicates the average level of CPU utilization
  parameters:
    correlatedRequestHeader:
      name: X-Correlation-ID
      in: header
      description: "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request."
      required: true
      schema:
        type: string
        format: uuid
      example: 14a42ea6-c394-41c3-8bcd-a29b9f5e6835
  headers:
    correlatedResponseHeader:
      description: A response header that returns the unique correlation ID used to initiate the request.
      required: true
      schema:
        type: string
        format: uuid
      example: 14a42ea6-c394-41c3-8bcd-a29b9f5e6835
